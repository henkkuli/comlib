initSidebarItems({"enum":[["Sign","Sign of a number."]],"fn":[["factorize","Factorizes the given integer into its prime factors."],["gcd","Computes the greatest common divisor of the given numbers."],["is_prime","Checks whether a given number is a prime."],["lcm","Computes the least common multiple of the given numbers."],["mod_pow","Raises base to given exponent in the given modulus."],["next_permutation","Computes lexicographically next smallest permutation."]],"mod":[["subsets","Module containing functions and structs for iterating subsets."]],"struct":[["Mod1e9p7","Commonly used modulus 10‚Åπ + 7."],["ModInt","Integer type for which all computations are executed in modulo given by `M::modulus`."],["PrimeSieve","Sieve of Eratosthenes."],["Quot","A quotient. Represents a rational number as `numerator/denominator`."],["RuntimeModulus","Modulus whose value can be selected at runtime."],["RuntimePrimeModulus","Modulus whose value can be selected at runtime."]],"trait":[["Float","Trait implemented by floating-point numbers."],["Integer","Trait implemented by integral types."],["InvertibleModulus","Marker trait for indicating that modular numbers in this modulo can be inverted."],["Modulus","Modulus contains the modulus and the actual storage type of [`ModInt`]."],["NonZero","Trait implemented by numeric types which cannot contain 0."],["Numeric","Trait implemented by numeric types."],["Signed","Trait implemented by signed numbers."]]});